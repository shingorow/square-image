var b=Object.defineProperty;var C=(a,t,o)=>t in a?b(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o;var u=(a,t,o)=>(C(a,typeof t!="symbol"?t+"":t,o),o);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(e){if(e.ep)return;e.ep=!0;const n=o(e);fetch(e.href,n)}})();class O{constructor(){u(this,"configKey","marginSettings");u(this,"storage",window.localStorage)}get(){const t=[{label:"None",value:0,active:!0},{label:"2%",value:.02,active:!1},{label:"5%",value:.05,active:!1},{label:"10%",value:.1,active:!1}],o=JSON.parse(this.storage.getItem(this.configKey));return typeof o!="object"||o===null?(this.storage.setItem(this.configKey,JSON.stringify(t)),t):o}set(t){if(t===null)return;const o=JSON.parse(this.storage.getItem(this.configKey));for(const i in o)o[i].active=o[i].value===parseFloat(t);return this.storage.setItem(this.configKey,JSON.stringify(o)),o}}class E{create(t,o,i=()=>{}){const e=document.querySelector(o);for(;e.lastChild;)e.removeChild(e.lastChild);const n=[];for(const s of t){const r=document.createElement("li"),l=document.createElement("button");l.dataset.margin=s.value,l.textContent=s.label,s.active&&l.classList.add("active"),r.appendChild(l),e.appendChild(r),n.push(r)}return n}}class I{draw(t,o,i){const e=document.querySelector(t),n=e.getContext("2d"),s=1-o;n.clearRect(0,0,e.width,e.height),n.beginPath(),n.fillStyle="white",n.fillRect(0,0,e.width,e.height);const r=new FileReader;r.onload=function(l){const c=new Image;c.onload=function(){const w=Math.max(c.width,c.height),m=Math.max(e.width,e.height)/w,v=c.width*m*s,y=c.height*m*s,S=(e.width-v)/2,L=(e.height-y)/2;n.drawImage(c,S,L,v,y)},c.src=r.result},r.readAsDataURL(i)}download(t){document.querySelector(t).toBlob(i=>{const e=new File([i],"square-image.png",{type:"image/png"});navigator.share({text:"Square Image",url:"https://sim.engrowth.work/",files:[e]}).catch(n=>{alert("Some errors!")})},"image/png")}}const g=new O;let f=g.get();const p="#file",h="#canvas",q=new E,d=new I;document.addEventListener("DOMContentLoaded",()=>{const a=document.querySelector(p),t=q.create(f,"#margin-size-list",g.set.bind(g),d.draw,p,h);for(const i of t)i.firstChild.addEventListener("click",e=>{for(const r of t)r.firstChild.classList.remove("active");e.target.classList.add("active");const n=e.target.dataset.margin,s=a.files[0]??null;s&&d.draw(h,n,s),f=g.set(n)});a.addEventListener("change",i=>{const n=f.find(s=>s.active).value;d.draw(h,n,i.target.files[0])}),document.querySelector("#download").addEventListener("click",()=>{d.download("#canvas")})});
