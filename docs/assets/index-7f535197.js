var b=Object.defineProperty;var O=(a,n,o)=>n in a?b(a,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[n]=o;var u=(a,n,o)=>(O(a,typeof n!="symbol"?n+"":n,o),o);(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();class C{constructor(){u(this,"configKey","marginSettings");u(this,"storage",window.localStorage)}get(){const n=[{label:"None",value:0,active:!0},{label:"2%",value:.02,active:!1},{label:"5%",value:.05,active:!1},{label:"10%",value:.1,active:!1}],o=JSON.parse(this.storage.getItem(this.configKey));return typeof o!="object"||o===null?(this.storage.setItem(this.configKey,JSON.stringify(n)),n):o}set(n){if(n===null)return;const o=JSON.parse(this.storage.getItem(this.configKey));for(const i in o)o[i].active=o[i].value===parseFloat(n);return this.storage.setItem(this.configKey,JSON.stringify(o)),o}}class E{create(n,o,i=()=>{}){const e=document.querySelector(o);for(;e.lastChild;)e.removeChild(e.lastChild);const t=[];for(const s of n){const c=document.createElement("li"),l=document.createElement("button");l.dataset.margin=s.value,l.textContent=s.label,s.active&&l.classList.add("active"),c.appendChild(l),e.appendChild(c),t.push(c)}return t}}class I{draw(n,o,i){const e=document.querySelector(n),t=e.getContext("2d"),s=1-o;t.clearRect(0,0,e.width,e.height),t.beginPath(),t.fillStyle="white",t.fillRect(0,0,e.width,e.height);const c=new FileReader;c.onload=function(l){const r=new Image;r.onload=function(){const w=Math.max(r.width,r.height),m=Math.max(e.width,e.height)/w,v=r.width*m*s,y=r.height*m*s,L=(e.width-v)/2,S=(e.height-y)/2;t.drawImage(r,L,S,v,y)},r.src=c.result},c.readAsDataURL(i)}download(n){document.querySelector(n).toBlob(i=>{const e=URL.createObjectURL(i),t=document.createElement("a");t.href=e,t.download="square-image.png",t.click()},"image/png")}}const g=new C;let f=g.get();const p="#file",h="#canvas",N=new E,d=new I;document.addEventListener("DOMContentLoaded",()=>{const a=document.querySelector(p),n=N.create(f,"#margin-size-list",g.set.bind(g),d.draw,p,h);for(const i of n)i.firstChild.addEventListener("click",e=>{for(const c of n)c.firstChild.classList.remove("active");e.target.classList.add("active");const t=e.target.dataset.margin,s=a.files[0]??null;s&&d.draw(h,t,s),f=g.set(t)});a.addEventListener("change",i=>{const t=f.find(s=>s.active).value;d.draw(h,t,i.target.files[0])}),document.querySelector("#download").addEventListener("click",()=>{d.download("#canvas")})});
